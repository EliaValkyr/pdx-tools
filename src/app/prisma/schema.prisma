generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Save {
  id                     String                      @id
  createdOn              DateTime                    @default(now()) @db.Timestamptz(6) @map("created_on")
  locked                 Boolean                     @default(false)
  filename               String
  user                   User                        @relation(fields: [userId], references: [userId])
  userId                 String                      @map("user_id")
  encoding               SaveEncoding
  hash                   String
  date                   String
  days                   Int
  player                 String
  displayedCountryName   String?                     @map("displayed_country_name")
  campaignId             String                      @map("campaign_id")
  campaignLength         Int?                        @map("campaign_length")
  ironman                Boolean
  multiplayer            Boolean?
  observer               Boolean?
  dlc                    Int[]
  saveVersionFirst       Int                         @map("save_version_first") @db.SmallInt
  saveVersionSecond      Int                         @map("save_version_second") @db.SmallInt
  saveVersionThird       Int                         @map("save_version_third") @db.SmallInt
  saveVersionFourth      Int                         @map("save_version_fourth") @db.SmallInt
  checksum               String
  achieveIds             Int[]                       @map("achieve_ids")
  players                String[]
  playerStartTag         String?                     @map("player_start_tag")
  playerStartTagName     String?                     @map("player_start_tag_name")
  gameDifficulty         GameDifficulty              @map("game_difficulty")
  aar                    String?
  playthroughId          String?                     @map("playthrough_id")
  saveSlot               Boolean                     @map("save_slot")

  @@map("saves")
  @@index([days], name: "idx_save_achieve_days")
  @@index([achieveIds], name: "idx_save_achieve_ids")
  @@index([campaignId], name: "idx_save_campaign_id")
  @@index([checksum], name: "idx_save_checksum")
  @@index([createdOn], name: "idx_save_creation")
  @@index([dlc], name: "idx_save_dlc")
  @@index([hash], name: "idx_save_hash")
  @@index([players], name: "idx_save_players")
  @@index([playthroughId], name: "idx_saves_playthrough_id")
}

model User {
  userId     String    @id @map("user_id")
  steamId    String?   @unique @map("steam_id")
  steamName  String?   @map("steam_name")
  email      String?
  account    Account   @default(FREE)
  display    String?
  createdOn  DateTime  @default(now()) @db.Timestamptz(6) @map("created_on")
  saves      Save[]

  @@map("users")
  @@index([steamId], name: "idx_users_steam_id")
}

enum Account {
  FREE    @map("free")
  ADMIN   @map("admin")

  @@map("account")
}

enum GameDifficulty {
  VERY_EASY   @map("very_easy")
  EASY        @map("easy")
  NORMAL      @map("normal")
  HARD        @map("hard")
  VERY_HARD   @map("very_hard")

  @@map("game_difficulty")
}

enum SaveEncoding {
  TEXT      @map("text")
  TEXTZIP   @map("textzip")
  BINZIP    @map("binzip")

  @@map("save_encoding")
}
